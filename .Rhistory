y = "Performance Difference",
color = "Condition") +
ylim(-1, 1) +
scale_x_continuous(breaks = seq(1, 6, 1)) +
geom_point(data = data_long, aes(x = Block, y = Performance_Difference, color = Condition),
position = position_jitterdodge(jitter.width = 0.2, dodge.width = dodge_width), alpha = 0.5)
print(g2)
# Visualize Data
g1 <- ggplot(data_long, aes(x=Block, y=Performance_Difference, color=Condition, group=Condition)) +
geom_smooth(alpha = 0.25) +
geom_jitter(width = 0.2, height = 0) +
theme_classic() +
labs(title = "Performance Difference by Block by Condition", x = "Block", y = "Performance Difference") +
scale_x_continuous(breaks = seq(1, 6, 1)) +
scale_color_manual(values = c("Decreasing" = colour.decreasing, "Increasing" = colour.increasing))+
ylim(-0.6, 0.6)
print(g1)
g2 <- ggplot(summary_data, aes(x = Block, y = Average_Performance_Difference, group = Condition, color = Condition)) +
geom_line() +
geom_point(position = position_dodge(width = dodge_width)) +
geom_errorbar(aes(ymin = Average_Performance_Difference - se, ymax = Average_Performance_Difference + se),
width = 0.4, position = position_dodge(width = dodge_width)) +
theme_classic() +
scale_color_manual(values = c("Decreasing" = colour.decreasing, "Increasing" = colour.increasing)) +
labs(title = "Average Performance Difference across Conditions with Standard Error",
x = "Block",
y = "Performance Difference",
color = "Condition") +
ylim(-0.6, 0.6) +
scale_x_continuous(breaks = seq(1, 6, 1)) +
geom_point(data = data_long, aes(x = Block, y = Performance_Difference, color = Condition),
position = position_jitterdodge(jitter.width = 0.2, dodge.width = dodge_width), alpha = 0.5)
print(g2)
# Visualize Interaction with Standard Error as Ribbon
dodge_width <- 0.2 # seperation between conditions
# Visualize Interaction with Standard Error as Ribbon
dodge_width <- 0.2 # seperation between conditions
g3 <- ggplot(summary_data, aes(x = Block, y = Average_Performance_Difference, group = Condition, color = Condition, fill = Condition)) +
geom_line() +
geom_point(position = position_dodge(width = dodge_width)) +
geom_ribbon(aes(ymin = Average_Performance_Difference - se, ymax = Average_Performance_Difference + se),
alpha = 0.25, position = position_dodge(width = dodge_width)) +
theme_classic() +
scale_color_manual(values = c("Decreasing" = colour.decreasing, "Increasing" = colour.increasing)) +
scale_fill_manual(values = c("Decreasing" = colour.decreasing, "Increasing" = colour.increasing)) +
labs(title = "Average Performance Difference across Conditions with Standard Error as Ribbon",
x = "Block",
y = "Performance Difference",
color = "Condition") +
ylim(-0.6, 0.6) +
scale_x_continuous(breaks = seq(1, 6, 1)) +
geom_point(data = data_long, aes(x = Block, y = Performance_Difference, color = Condition),
position = position_jitterdodge(jitter.width = 0.2, dodge.width = dodge_width), alpha = 0.5)
print(g3)
source("~/Documents/MATLAB/Blue_Orange_Reliance/BO_Reliance_Analysis/scripts/Main.R", echo=TRUE)
View(data_long)
hist(data_long$Performance_Difference)
source("~/Documents/MATLAB/Blue_Orange_Reliance/BO_Reliance_Analysis/scripts/Main.R", echo=TRUE)
model_4 <- lmer(data = data_long, Trust ~ Condition * Reliability * Confidence + (1 | Participant))
summary(model_4)
tab_model(model_4)
# used for accessing all conditions later
data_origian <- data
data_all_conditions <- data_original
# used for accessing all conditions later
data_origianl <- data
data_all_conditions <- data_original
# used for accessing all conditions later
data_original <- data
data_all_conditions <- data_original
# Remove uneeded data
data_all_conditions <- filter(data_all_conditions, condition <= 2) # condition 1 and 2 are 50% decreasing
View(data_all_conditions)
# Load Data
filename <- 'Reliance_Data.csv'
data <- read.csv(here('data', 'raw', filename), header = TRUE)
# used for accessing all conditions later
data_original <- data
data_all_conditions <- data_original
# Remove uneeded data
# data_all_conditions <- filter(data_all_conditions, condition <= 2) # condition 1 and 2 are 50% decreasing
data_all_conditions <- as.data_all_conditions.frame(data_all_conditions)
# Remove uneeded data
# data_all_conditions <- filter(data_all_conditions, condition <= 2) # condition 1 and 2 are 50% decreasing
data_all_conditions <- as.data.frame(data_all_conditions)
View(data_all_conditions)
# Remove poorly performing participants
data_all_conditions <- mutate(data_all_conditions, totalPerformance = rowSums(select(data_all_conditions, p1_before:p6_before), na.rm = TRUE)) # calculate total performance
data_all_conditions <- na.omit(data_all_conditions[data_all_conditions$totalPerformance > 170, ]) # removes participants not able to achieve 170 correct trials
# Remove data that isn't working properly
data_all_conditions = na.omit(data_all_conditions[!is.na(data_all_conditions$t1), ]) # removes participants with NA in t1
# Data Renaming
data_all_conditions <- data_all_conditions %>%
mutate(condition = case_when(
condition == 1 ~ "Decreasing", # Relabel condition 1
condition == 2 ~ "Increasing", # Relabel condition 2
TRUE ~ as.character(condition)  # Handles any other unforeseen values gracefully
))
data_all_conditions <- rename(data_all_conditions, Participant = participant.number)
data_all_conditions <- rename(data_all_conditions, Condition = condition)
# Data Formatting
data_all_conditions$Condition <- as.factor(data_all_conditions$Condition)
data_all_conditions$Participant <- as.factor(data_all_conditions$Participant)
# Long Format Data
data_all_conditions_long <- data_all_conditions %>%
select(Participant, Condition, r1, r2, r3, r4, r5, r6) %>% # sel
pivot_longer(cols = starts_with("r"), # find a r1:r6
names_to = "Block", # put in Block column
values_to = "Reliance") # values to Reliance column
tmp <- data_all_conditions %>%
select(-totalPerformance) %>% # remove unneeded columns)
pivot_longer(cols = starts_with("t"), # find a t1:t6
names_to = "Block", # put in Block column
values_to = "Trust") # values to Trust column
data_all_conditions_long$Trust <- tmp$Trust # add Trust to data_all_conditions_long
tmp <- data_all_conditions %>%
select(-Participant) %>% # remove unneeded columns
pivot_longer(cols =  matches("^p\\d+_before$"), # find a p1_before:p6_before
names_to = "Block", # put in Block column
values_to = "Performance_Before") # values to Performance column
data_all_conditions_long$Performance_Before <- tmp$Performance_Before # add Performance_Before to data_all_conditions_long
tmp <- data_all_conditions %>%
select(-Participant) %>% # remove unneeded columns
pivot_longer(cols =  matches("^p\\d+_after$"), # find a p1_after:p6_after
names_to = "Block", # put in Block column
values_to = "Performance_After") # values to Performance column
data_all_conditions_long$Performance_After <- tmp$Performance_After # add Performance_After to data_all_conditions_long
tmp <- data_all_conditions %>%
select(-Condition) %>% # remove unneeded columns
pivot_longer(cols = starts_with('c'), # find a c1:c6
names_to = "Block", # put in Block column
values_to = "Confidence") # values to Confidence column)
data_all_conditions_long$Confidence <- tmp$Confidence # add Confidence to data_all_conditions_long
tmp <- data_all_conditions %>%
pivot_longer(cols = starts_with('a'),
names_to = "Block",
values_to = "Reliability")
data_all_conditions_long$Reliability <- tmp$Reliability
rm(tmp)
data_all_conditions_long <- data_all_conditions_long %>% # replace r1:r6 with just numbers
mutate(Block = case_when(
Block == "r1" ~ '1',
Block == "r2" ~ '2',
Block == "r3" ~ '3',
Block == "r4" ~ '4',
Block == "r5" ~ '5',
Block == "r6" ~ '6',
TRUE ~ as.character(Condition)  # Handles any other unforeseen values gracefully
))
data_all_conditions_long$Block <- as.numeric(data_all_conditions_long$Block)
data_all_conditions_long$Performance_Before <- data_all_conditions_long$Performance_Before / 50
data_all_conditions_long$Performance_After <- data_all_conditions_long$Performance_After / 50
# Calculate Performance Difference
data_all_conditions_long$Performance_Difference <- data_all_conditions_long$Performance_After - data_all_conditions_long$Performance_Before
# Store processed data_all_conditions
write.csv(data_all_conditions, here('data', 'processed', 'processed_data_all_conditions.csv'), row.names = FALSE)
write.csv(data_all_conditions_long, here('data', 'processed', 'processed_data_all_conditions_long.csv'), row.names = FALSE)
View(data_all_conditions)
data_all_conditions <- data_original
source("~/Documents/MATLAB/Blue_Orange_Reliance/BO_Reliance_Analysis/scripts/10_Preprocessing_All_Conditions.R", echo=TRUE)
View(data_all_conditions_long)
source(here('scripts', 'Other_Functions.R'))
data <- load_processed_data()
source(here('scripts', 'Other_Functions.R'))
data <- load_processed_data_all_conditions()
data_long <- load_processed_data_all_conditions_long()
source("~/Documents/MATLAB/Blue_Orange_Reliance/BO_Reliance_Analysis/scripts/10_Preprocessing_All_Conditions.R", echo=TRUE)
data <- load_processed_data_all_conditions()
data_long <- load_processed_data_all_conditions_long()
View(data)
# Figure Parameters
source(here('scripts', 'Figure_Parameters.R'))
model_1 <- lmer(data = data_long, Trust ~ Condition * Block * Confidence + (1 | Participant))
summary(model_1)
tab_model(model_1)
model_4 <- lmer(data = data_long, Trust ~ Condition * Reliability * Confidence + (1 | Participant))
summary(model_4)
tab_model(model_4)
model_6 <- lmer(data = data_long, Trust ~ Condition * Reliability * Confidence + (1 | Participant) + (1 | Condition))
summary(model_6)
tab_model(model_6)
# Visualize
g4 <- ggplot(data_all_conditions_long, aes(x = Confidence, y = Trust, color = Block, group = Block)) +
geom_jitter(size = 0.5, alpha = 0.3) +
geom_smooth(method = 'lm', alpha = 0.2) +
facet_wrap(.~Condition, scales='free') +
theme_classic() +
theme(axis.line=element_line()) +
labs(title = "Trust as a function of self-confidence",
x = "Self-confidence",
y = "Trust",
color = "Block") +
ylim(0, 100) +
xlim(0, 100)
print(g4)
# Visualize
g4 <- ggplot(data_all_conditions_long, aes(x = Confidence, y = Trust, color = as.factor(Block), group = as.factor(Block)) +
# Visualize
g4 <- ggplot(data_all_conditions_long, aes(x = Confidence, y = Trust, color = as.factor(Block), group = as.factor(Block))) +
geom_jitter(size = 0.5, alpha = 0.3) +
geom_smooth(method = 'lm', alpha = 0.2) +
facet_wrap(.~Condition, scales='free') +
theme_classic() +
theme(axis.line=element_line()) +
labs(title = "Trust as a function of self-confidence",
x = "Self-confidence",
y = "Trust",
color = "Block") +
ylim(0, 100) +
xlim(0, 100)
print(g4)
print(g4)
# Visualize
g4 <- ggplot(data_all_conditions_long, aes(x = Confidence, y = Trust, color = as.factor(Block), group = as.factor(Block))) +
geom_jitter(size = 0.5, alpha = 0.3) +
geom_smooth(method = 'lm', alpha = 0.2) +
facet_wrap(.~Condition, scales='free') +
theme_classic() +
theme(axis.line=element_line()) +
labs(title = "Trust as a function of self-confidence",
x = "Self-confidence",
y = "Trust",
color = "Block") +
ylim(0, 100) +
xlim(0, 100)
print(g4)
g2 <- ggplot(data_all_conditions_long, aes(x = Confidence, y = Trust, color = as.factor(Reliability), group = as.factor(Reliability))) +
geom_jitter(size = 0.5, alpha = 0.3) +
geom_smooth(method = 'lm', alpha = 0.2) +
facet_wrap(.~Condition, scales='free') +
theme_classic() +
theme(axis.line=element_line()) +
labs(title = "Trust as a function of self-confidence",
x = "Self-confidence",
y = "Trust",
color = "Block") +
ylim(0, 100) +
xlim(0, 100)
print(g2)
model_4 <- lmer(data = data_long, Trust ~ Condition * Reliability * Confidence + (1 | Participant))
summary(model_4)
tab_model(model_4)
source("~/Documents/MATLAB/Blue_Orange_Reliance/BO_Reliance_Analysis/scripts/Main.R", echo=TRUE)
model_4 <- lmer(data = data_long, Trust ~ Condition * Reliability * Confidence + (1 | Participant))
summary(model_4)
tab_model(model_4)
View(data)
View(data_long)
model_6 <- lmer(data = data_long, Trust ~ Condition * Reliability * Confidence * Reliance + (1 | Participant))
summary(model_6)
tab_model(model_6)
model_8 <- lmer(data = data_long, Reliance ~ Condition * Reliability * Confidence * Trust + (1 | Participant))
summary(model_8)
tab_model(model_8)
g4 <- ggplot(data_all_conditions_long, aes(x = Trust, y = Reliance, color = as.factor(Reliability), group = as.factor(Reliability))) +
geom_jitter(size = 0.5, alpha = 0.3) +
geom_smooth(method = 'lm', alpha = 0.2) +
facet_wrap(.~Condition, scales='free') +
theme_classic() +
theme(axis.line=element_line()) +
labs(title = "Trust as a function of self-confidence",
x = "Self-confidence",
y = "Trust",
color = "Block") +
ylim(0, 100) +
xlim(0, 100)
g4 <- ggplot(data_long, aes(x = Trust, y = Reliance, color = as.factor(Reliability), group = as.factor(Reliability))) +
geom_jitter(size = 0.5, alpha = 0.3) +
geom_smooth(method = 'lm', alpha = 0.2) +
facet_wrap(.~Condition, scales='free') +
theme_classic() +
theme(axis.line=element_line()) +
labs(title = "Trust as a function of self-confidence",
x = "Self-confidence",
y = "Trust",
color = "Block") +
ylim(0, 100) +
xlim(0, 100)
print(g4)
View(data)
View(data_long)
g4 <- ggplot(data_long, aes(x = Trust, y = Reliance, color = as.factor(Reliability), group = as.factor(Reliability))) +
geom_jitter(size = 0.5, alpha = 0.3) +
geom_smooth(method = 'lm', alpha = 0.2) +
facet_wrap(.~Condition, scales='free') +
theme_classic() +
theme(axis.line=element_line()) +
labs(title = "Trust as a function of self-confidence",
x = "Self-confidence",
y = "Trust",
color = "Block") +
#ylim(0, 100) +
#xlim(0, 100)
print(g4)
g4 <- ggplot(data_long, aes(x = Trust, y = Reliance, color = as.factor(Reliability), group = as.factor(Reliability))) +
geom_jitter(size = 0.5, alpha = 0.3) +
geom_smooth(method = 'lm', alpha = 0.2) +
facet_wrap(.~Condition, scales='free') +
theme_classic() +
theme(axis.line=element_line()) +
labs(title = "Trust as a function of self-confidence",
x = "Self-confidence",
y = "Trust",
color = "Block")
#ylim(0, 100) +
#xlim(0, 100)
print(g4)
View(data_long)
str(data_long)
g4 <- ggplot(data_long, aes(x = Trust, y = Reliance, color = as.factor(Reliability), group = as.factor(Reliability))) +
geom_jitter(size = 0.5, alpha = 0.3) +
geom_smooth(method = 'lm', alpha = 0.2) +
facet_wrap(.~Condition, scales='free') +
theme_classic() +
theme(axis.line=element_line()) +
labs(title = "Trust as a function of self-confidence",
x = "Trust",
y = "Reliance",
color = "Block")
ylim(0, 1) +
xlim(0, 100)
g4 <- ggplot(data_long, aes(x = Trust, y = Reliance, color = as.factor(Reliability), group = as.factor(Reliability))) +
geom_jitter(size = 0.5, alpha = 0.3) +
geom_smooth(method = 'lm', alpha = 0.2) +
facet_wrap(.~Condition, scales='free') +
theme_classic() +
theme(axis.line=element_line()) +
labs(title = "Trust as a function of self-confidence",
x = "Trust",
y = "Reliance",
color = "Block") +
ylim(0, 1) +
xlim(0, 100)
print(g4)
g4 <- ggplot(data_long, aes(x = Trust, y = Reliance, color = as.factor(Reliability), group = as.factor(Reliability))) +
geom_jitter(size = 0.5, alpha = 0.3) +
geom_smooth(method = 'lm', alpha = 0.2) +
facet_wrap(.~Condition, scales='free') +
theme_classic() +
theme(axis.line=element_line()) +
labs(title = "Trust as a function of self-confidence",
x = "Trust",
y = "Reliance",
color = "Reliability") +
ylim(0, 1) +
xlim(0, 100)
print(g4)
model_8 <- lmer(data = data_long, Reliance ~ Condition * Reliability * Confidence * Trust + (1 | Participant))
summary(model_8)
tab_model(model_8)
g4 <- ggplot(data_long, aes(x = Trust, y = Reliance, color = as.factor(Reliability), group = as.factor(Reliability))) +
geom_jitter(size = 0.5, alpha = 0.3) +
geom_smooth(method = 'lm', alpha = 0.2) +
facet_wrap(.~Condition, scales='free') +
theme_classic() +
theme(axis.line=element_line()) +
labs(title = "Trust as a function of self-confidence",
x = "Trust",
y = "Reliance",
color = "Reliability") +
ylim(0, 1) +
xlim(0, 100)
print(g4)
# All Conditions LME
source(here('scripts', 'Other_Functions.R'))
data <- load_processed_data_all_conditions()
data_long <- load_processed_data_all_conditions_long()
# Figure Parameters
source(here('scripts', 'Figure_Parameters.R'))
# Visualize
g1 <- ggplot(data_all_conditions_long, aes(x = Confidence, y = Trust, color = as.factor(Block), group = as.factor(Block))) +
geom_jitter(size = 0.5, alpha = 0.3) +
geom_smooth(method = 'lm', alpha = 0.2) +
facet_wrap(.~Condition, scales='free') +
theme_classic() +
theme(axis.line=element_line()) +
labs(title = "Trust as a function of self-confidence",
x = "Self-confidence",
y = "Trust",
color = "Block") +
ylim(0, 100) +
xlim(0, 100)
print(g1)
g2 <- ggplot(data_all_conditions_long, aes(x = Confidence, y = Trust, color = as.factor(Reliability), group = as.factor(Reliability))) +
geom_jitter(size = 0.5, alpha = 0.3) +
geom_smooth(method = 'lm', alpha = 0.2) +
facet_wrap(.~Condition, scales='free') +
theme_classic() +
theme(axis.line=element_line()) +
labs(title = "Trust as a function of self-confidence",
x = "Self-confidence",
y = "Trust",
color = "Block") +
ylim(0, 100) +
xlim(0, 100)
print(g2)
g5 <- ggplot(data_long, aes(x = Confidence, y = Trust, color = as.factor(Reliability), group = as.factor(Reliability))) +
geom_jitter(size = 0.5, alpha = 0.3) +
geom_smooth(method = 'lm', alpha = 0.2) +
facet_wrap(.~Condition, scales='free') +
theme_classic() +
theme(axis.line=element_line()) +
labs(title = "Trust as a function of self-confidence",
x = "Confidence",
y = "Trust",
color = "Reliability") +
ylim(0, 1) +
xlim(0, 100)
print(g5)
source(here('scripts', 'Other_Functions.R'))
data <- load_processed_data()
data_long <- load_processed_data_long()
# Figure Parameters
source(here('scripts', 'Figure_Parameters.R'))
g5 <- ggplot(data_long, aes(x = Confidence, y = Trust, color = as.factor(Reliability), group = as.factor(Reliability))) +
geom_jitter(size = 0.5, alpha = 0.3) +
geom_smooth(method = 'lm', alpha = 0.2) +
facet_wrap(.~Condition, scales='free') +
theme_classic() +
theme(axis.line=element_line()) +
labs(title = "Trust as a function of self-confidence",
x = "Confidence",
y = "Trust",
color = "Reliability") +
ylim(0, 1) +
xlim(0, 100)
print(g5)
View(data_long)
g5 <- ggplot(data_long, aes(x = Confidence, y = Trust, color = as.factor(Reliability), group = as.factor(Reliability))) +
geom_jitter(size = 0.5, alpha = 0.3) +
#geom_smooth(method = 'lm', alpha = 0.2) +
facet_wrap(.~Condition, scales='free') +
theme_classic() +
theme(axis.line=element_line()) +
labs(title = "Trust as a function of self-confidence",
x = "Confidence",
y = "Trust",
color = "Reliability")
#ylim(0, 1) +
#xlim(0, 100)
print(g5)
g5 <- ggplot(data_long, aes(x = Confidence, y = Trust, color = as.factor(Reliability), group = as.factor(Reliability))) +
geom_jitter(size = 0.5, alpha = 0.3) +
geom_smooth(method = 'lm', alpha = 0.2) +
facet_wrap(.~Condition, scales='free') +
theme_classic() +
theme(axis.line=element_line()) +
labs(title = "Trust as a function of self-confidence",
x = "Confidence",
y = "Trust",
color = "Reliability")
#ylim(0, 1) +
#xlim(0, 100)
print(g5)
g5 <- ggplot(data_long, aes(x = Confidence, y = Trust, color = as.factor(Reliability), group = as.factor(Reliability))) +
geom_jitter(size = 0.5, alpha = 0.3) +
geom_smooth(method = 'lm', alpha = 0.2) +
facet_wrap(.~Condition, scales='free') +
theme_classic() +
theme(axis.line=element_line()) +
labs(title = "Trust as a function of self-confidence",
x = "Confidence",
y = "Trust",
color = "Reliability")
ylim(0, 100) +
xlim(0, 100)
print(g5)
g5 <- ggplot(data_long, aes(x = Confidence, y = Trust, color = as.factor(Reliability), group = as.factor(Reliability))) +
geom_jitter(size = 0.5, alpha = 0.3) +
geom_smooth(method = 'lm', alpha = 0.2) +
facet_wrap(.~Condition, scales='free') +
theme_classic() +
theme(axis.line=element_line()) +
labs(title = "Trust as a function of self-confidence",
x = "Confidence",
y = "Trust",
color = "Reliability") +
ylim(0, 100) +
xlim(0, 100)
print(g5)
model_4 <- lmer(data = data_long, Trust ~ Condition * Reliability * Confidence + (1 | Participant))
summary(model_4)
tab_model(model_4)
model_8 <- lmer(data = data_long, Reliance ~ Condition * Reliability * Confidence * Trust + (1 | Participant))
summary(model_8)
tab_model(model_8)
g6 <- ggplot(data_long, aes(x = Confidence, y = Reliance, color = as.factor(Reliability), group = as.factor(Reliability))) +
geom_jitter(size = 0.5, alpha = 0.3) +
geom_smooth(method = 'lm', alpha = 0.2) +
facet_wrap(.~Condition, scales='free') +
theme_classic() +
theme(axis.line=element_line()) +
labs(title = "Trust as a function of self-confidence",
x = "Confidence",
y = "Reliance",
color = "Reliability") +
ylim(0, 100) +
xlim(0, 100)
print(g6)
g6 <- ggplot(data_long, aes(x = Confidence, y = Reliance, color = as.factor(Reliability), group = as.factor(Reliability))) +
geom_jitter(size = 0.5, alpha = 0.3) +
geom_smooth(method = 'lm', alpha = 0.2) +
facet_wrap(.~Condition, scales='free') +
theme_classic() +
theme(axis.line=element_line()) +
labs(title = "Trust as a function of self-confidence",
x = "Confidence",
y = "Reliance",
color = "Reliability") +
ylim(0, 1) +
xlim(0, 100)
print(g6)
