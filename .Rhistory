geom_jitter(size = 0.5, alpha = 0.3) +
geom_smooth(method = 'lm', alpha = 0.2) +
facet_wrap(.~Condition, scales='free') +
theme_classic() +
theme(axis.line=element_line()) +
labs(title = "Trust as a function of self-confidence",
x = "Trust",
y = "Reliance",
color = "Reliability") +
ylim(0, 1) +
xlim(0, 100)
print(g4)
ggsave(here('output','figures','09_Trust_by_Reliance_by_Condition.png'),
plot = g4, device = device, width = width, height = height, units = units, dpi = dpi)
g5 <- ggplot(data_long, aes(x = Confidence, y = Trust, color = as.factor(Reliability), group = as.factor(Reliability))) +
geom_jitter(size = 0.5, alpha = 0.3) +
geom_smooth(method = 'lm', alpha = 0.2) +
facet_wrap(.~Condition, scales='free') +
theme_classic() +
theme(axis.line=element_line()) +
labs(title = "Trust as a function of self-confidence",
x = "Confidence",
y = "Trust",
color = "Reliability") +
ylim(0, 100) +
xlim(0, 100)
print(g5)
g6 <- ggplot(data_long, aes(x = Confidence, y = Reliance, color = as.factor(Reliability), group = as.factor(Reliability))) +
geom_jitter(size = 0.5, alpha = 0.3) +
geom_smooth(method = 'lm', alpha = 0.2) +
facet_wrap(.~Condition, scales='free') +
theme_classic() +
theme(axis.line=element_line()) +
labs(title = "Trust as a function of self-confidence",
x = "Confidence",
y = "Reliance",
color = "Reliability") +
ylim(0, 1) +
xlim(0, 100)
print(g6)
g3 <- ggplot(data_long, aes(x=Confidence, y=Trust)) +
geom_smooth(alpha = 0.25, method = 'lm', colour = 'green') +
geom_jitter(width = 0.2, height = 0, alpha = 0.5, colour = 'green') +
theme_classic() +
labs(title = "Trust by Confidence by Condition", x = "Confidence", y = "Trust") +
ylim(0, 100) +
xlim(0, 100)
print(g3)
ggsave(here('output','figures','09_Trust_by_Confidence.png'),
plot = g3, device = device, width = width, height = height, units = units, dpi = dpi)
g2 <- ggplot(data_long, aes(x=Confidence, y=Trust, color=Condition, group=Condition)) +
geom_smooth(alpha = 0.25, method = 'lm') +
geom_jitter(width = 0.2, height = 0, alpha = 0.5) +
theme_classic() +
labs(title = "Trust by Confidence by Condition", x = "Confidence", y = "Trust") +
scale_color_manual(values = c("Decreasing" = colour.decreasing, "Increasing" = colour.increasing))+
ylim(0, 100) +
xlim(0, 100)
print(g2)
g3 <- ggplot(data_long, aes(x=Confidence, y=Trust)) +
geom_smooth(alpha = 0.25, method = 'lm', colour = 'green') +
geom_jitter(width = 0.2, height = 0, alpha = 0.5, colour = 'green') +
theme_classic() +
labs(title = "Trust by Confidence by Condition", x = "Confidence", y = "Trust") +
ylim(0, 100) +
xlim(0, 100)
print(g3)
ggsave(here('output','figures','09_Trust_by_Confidence.png'),
plot = g3, device = device, width = width, height = height, units = units, dpi = dpi)
g4 <- ggplot(data_long, aes(x = Trust, y = Reliance, color = as.factor(Reliability), group = as.factor(Reliability))) +
geom_jitter(size = 0.5, alpha = 0.3) +
geom_smooth(method = 'lm', alpha = 0.2) +
facet_wrap(.~Condition, scales='free') +
theme_classic() +
theme(axis.line=element_line()) +
labs(title = "Trust as a function of self-confidence",
x = "Trust",
y = "Reliance",
color = "Reliability") +
ylim(0, 1) +
xlim(0, 100)
print(g4)
ggsave(here('output','figures','09_Trust_by_Reliance_by_Condition.png'),
plot = g4, device = device, width = width, height = height, units = units, dpi = dpi)
g5 <- ggplot(data_long, aes(x = Confidence, y = Trust, color = as.factor(Reliability), group = as.factor(Reliability))) +
geom_jitter(size = 0.5, alpha = 0.3) +
geom_smooth(method = 'lm', alpha = 0.2) +
facet_wrap(.~Condition, scales='free') +
theme_classic() +
theme(axis.line=element_line()) +
labs(title = "Trust as a function of self-confidence",
x = "Confidence",
y = "Trust",
color = "Reliability") +
ylim(0, 100) +
xlim(0, 100)
print(g5)
ggsave(here('output','figures','09_Trust_by_Confidence_by_Reliability_by_Condition.png'),
plot = g5, device = device, width = width, height = height, units = units, dpi = dpi)
g6 <- ggplot(data_long, aes(x = Confidence, y = Reliance, color = as.factor(Reliability), group = as.factor(Reliability))) +
geom_jitter(size = 0.5, alpha = 0.3) +
geom_smooth(method = 'lm', alpha = 0.2) +
facet_wrap(.~Condition, scales='free') +
theme_classic() +
theme(axis.line=element_line()) +
labs(title = "Trust as a function of self-confidence",
x = "Confidence",
y = "Reliance",
color = "Reliability") +
ylim(0, 1) +
xlim(0, 100)
print(g6)
g6 <- ggplot(data_long, aes(x = Confidence, y = Reliance, color = as.factor(Reliability), group = as.factor(Reliability))) +
geom_jitter(size = 0.5, alpha = 0.3) +
geom_smooth(method = 'lm', alpha = 0.2) +
facet_wrap(.~Condition, scales='free') +
theme_classic() +
theme(axis.line=element_line()) +
labs(title = "Reliance as a function of self-confidence",
x = "Confidence",
y = "Reliance",
color = "Reliability") +
ylim(0, 1) +
xlim(0, 100)
print(g6)
ggsave(here('output','figures','09_Reliance_by_Confidence_by_Reliability_by_Condition.png'),
plot = g6, device = device, width = width, height = height, units = units, dpi = dpi)
# Trust
results <- ezANOVA(data = data_long,
dv = Trust,
wid = Participant,
within = .(Block),
between = .(Condition),
detailed = TRUE,
type = 3)
print(results)
#data_long$Block <- as.numeric(data_long$Block)
data_long$Block <- as.factor(data_long$Block)
# Trust
results <- ezANOVA(data = data_long,
dv = Trust,
wid = Participant,
within = .(Block),
between = .(Condition),
detailed = TRUE,
type = 3)
print(results)
anova_table <- results$ANOVA
corrected_table <- results$'Sphericity Corrections'
anova_table
corrected_table
corrected_DFn <- corrected_table[anova_table$Effect == "Condition:Block", "DFn[GG]"]
corrected_DFn
library(afex)
results <- aov_ez(id = "Participant",
dv = "Trust",
data = data_long,
within = "Block",
between = "Condition",
detailed = TRUE)
print(results)
summary(results)
print(results)
#                    type = 3)
# print(results)
#
# anova_table <- results$ANOVA
# corrected_table <- results$'Sphericity Corrections'
#
# p_value_condition <- anova_table[anova_table$Effect == "Condition", "p"]
# p_value_block <- corrected_table[anova_table$Effect == "Block", "p[GG]"]
# p_value_interaction <- corrected_table[anova_table$Effect == "Condition:Block", "p[GG]"]
# corrected_DFn <- anova_table
library(afex)
results <- aov_ez(id = "Participant",
dv = "Trust",
data = data_long,
within = "Block",
between = "Condition",
detailed = TRUE)
print(results)
# Extracting p-values for the main effects and interactions
# Note: The exact names of the effects would depend on your ezANOVA output.
# You might have "Condition", "Block", "Condition:Block", etc.
p_value_condition <- anova_table[anova_table$Effect == "Condition", "p"]
library(afex)
results <- aov_ez(id = "Participant",
dv = "Reliance",
data = data_long,
within = "Block",
between = "Condition",
detailed = TRUE)
print(results)
summary(results)
library(sjstats)
effect_sizes <- eta_sq(results, partial = TRUE, ci.lvl = NA)  # Set ci.lvl=NA to exclude confidence intervals for faster computation
effect_sizes <- effectsize::eta_squared(results, partial = TRUE, ci.lvl = NA)  # Set ci.lvl=NA to exclude confidence intervals for faster computation
effect_sizes
results <- aov_ez(id = "Participant",
dv = "Trust",
data = data_long,
within = "Block",
between = "Condition",
detailed = TRUE)
print(results)
effect_sizes <- effectsize::eta_squared(results, partial = TRUE, ci.lvl = NA)  # Set ci.lvl=NA to exclude confidence intervals for faster computation
print(effect_sizes)
results <- aov_ez(id = "Participant",
dv = "Trust",
data = data_long,
within = "Block",
between = "Condition",
detailed = TRUE)
print(results)
# Trust
results <- ezANOVA(data = data_long,
print(results)
# Trust
results <- ezANOVA(data = data_long,
dv = Trust,
wid = Participant,
within = .(Block),
between = .(Condition),
detailed = TRUE,
type = 3)
print(results)
results <- aov_ez(id = "Participant",
dv = "Trust",
data = data_long,
within = "Block",
between = "Condition",
detailed = TRUE)
print(results)
summary(results)
effect_sizes <- effectsize::eta_squared(results, partial = TRUE, ci.lvl = NA)  # Set ci.lvl=NA to exclude confidence intervals for faster computation
print(effect_sizes)
# Dependence
# results <- ezANOVA(data = data_long,
#                    dv = Reliance,
#                    wid = Participant,
#                    within = .(Block),
#                    between = .(Condition),
#                    detailed = TRUE,
#                    type = 3)
# print(results)
results <- aov_ez(id = "Participant",
dv = "Reliance",
data = data_long,
within = "Block",
between = "Condition",
detailed = TRUE)
print(results)
# summary(results)
effect_sizes <- effectsize::eta_squared(results, partial = TRUE, ci.lvl = NA)  # Set ci.lvl=NA to exclude confidence intervals for faster computation
print(effect_sizes)
# Performance_Before
# results <- ezANOVA(data = data_long,
#                    dv = Performance_Before,
#                    wid = Participant,
#                    within = .(Block),
#                    between = .(Condition),
#                    detailed = TRUE,
#                    type = 3)
# print(results)
results <- aov_ez(id = "Participant",
dv = "Performance_Before",
data = data_long,
within = "Block",
between = "Condition",
detailed = TRUE)
print(results)
# summary(results)
effect_sizes <- effectsize::eta_squared(results, partial = TRUE, ci.lvl = NA)  # Set ci.lvl=NA to exclude confidence intervals for faster computation
print(effect_sizes)
# Performance_After
# results <- ezANOVA(data = data_long,
#                    dv = Performance_After,
#                    wid = Participant,
#                    within = .(Block),
#                    between = .(Condition),
#                    detailed = TRUE,
#                    type = 3)
# print(results)
results <- aov_ez(id = "Participant",
dv = "Performance_After",
data = data_long,
within = "Block",
between = "Condition",
detailed = TRUE)
print(results)
# summary(results)
effect_sizes <- effectsize::eta_squared(results, partial = TRUE, ci.lvl = NA)  # Set ci.lvl=NA to exclude confidence intervals for faster computation
print(effect_sizes)
# Performance_Difference
# results <- ezANOVA(data = data_long,
#                    dv = Performance_Difference,
#                    wid = Participant,
#                    within = .(Block),
#                    between = .(Condition),
#                    detailed = TRUE,
#                    type = 3)
# print(results)
results <- aov_ez(id = "Participant",
dv = "Performance_Difference",
data = data_long,
within = "Block",
between = "Condition",
detailed = TRUE)
print(results)
# summary(results)
effect_sizes <- effectsize::eta_squared(results, partial = TRUE, ci.lvl = NA)  # Set ci.lvl=NA to exclude confidence intervals for faster computation
print(effect_sizes)
# Confidence
# results <- ezANOVA(data = data_long,
#                    dv = Confidence,
#                    wid = Participant,
#                    within = .(Block),
#                    between = .(Condition),
#                    detailed = TRUE,
#                    type = 3)
# print(results)
results <- aov_ez(id = "Participant",
dv = "Confidence",
data = data_long,
within = "Block",
between = "Condition",
detailed = TRUE)
print(results)
# summary(results)
effect_sizes <- effectsize::eta_squared(results, partial = TRUE, ci.lvl = NA)  # Set ci.lvl=NA to exclude confidence intervals for faster computation
print(effect_sizes)
summary(results)
print(results)
summary(results)
source("~/Documents/MATLAB/Blue_Orange_Reliance/BO_Reliance_Analysis/scripts/Figure_Parameters.R", echo=TRUE)
source("~/Documents/MATLAB/Blue_Orange_Reliance/BO_Reliance_Analysis/scripts/Main.R", echo=TRUE)
source("~/Documents/MATLAB/Blue_Orange_Reliance/BO_Reliance_Analysis/scripts/Main.R", echo=TRUE)
source("~/Documents/MATLAB/Blue_Orange_Reliance/BO_Reliance_Analysis/scripts/03_Dependence.R", echo=TRUE)
results <- aov_ez(id = "Participant",
dv = "Trust",
data = data_long,
within = "Block",
between = "Condition",
detailed = TRUE)
print(results)
effect_sizes <- effectsize::eta_squared(results, partial = TRUE, ci.lvl = NA)  # Set ci.lvl=NA to exclude confidence intervals for faster computation
print(effect_sizes)
print(results)
effect_sizes <- effectsize::eta_squared(results, partial = TRUE, ci.lvl = NA)  # Set ci.lvl=NA to exclude confidence intervals for faster computation
print(effect_sizes)
results <- aov_ez(id = "Participant",
dv = "Trust",
data = data_long,
within = "Block",
between = "Condition",
detailed = TRUE)
print(results)
summary(results)
results <- aov_ez(id = "Participant",
dv = "Trust",
data = data_long,
within = "Block",
between = "Condition",
detailed = TRUE)
print(results)
capture.output(results, file = here('output','tables','12_Trust_GG_Anova.txt'))
effect_sizes <- effectsize::eta_squared(results, partial = TRUE, ci.lvl = NA)  # Set ci.lvl=NA to exclude confidence intervals for faster computation
print(effect_sizes)
capture.output(effect_size, file = here('output','tables','04_Trust_effect_sizes.txt'))
print(effect_sizes)
capture.output(effect_sizes, file = here('output','tables','04_Trust_effect_sizes.txt'))
capture.output(effect_sizes, file = here('output','tables','12_Trust_effect_sizes.txt'))
capture.output(effect_sizes, file = here('output','tables','12_Trust_Effect_Sizes.txt'))
print(effect_sizes)
capture.output(effect_sizes, file = here('output','tables','12_Trust_Effect_Sizes.txt'))
capture.output(effect_sizes, file = here('output','tables','12_Trust_Effect_Sizes.txt'))
source("~/Documents/MATLAB/Blue_Orange_Reliance/BO_Reliance_Analysis/scripts/12_GG_Corrections.R", echo=TRUE)
source("~/Documents/MATLAB/Blue_Orange_Reliance/BO_Reliance_Analysis/scripts/12_GG_Corrections.R", echo=TRUE)
results <- aov_ez(id = "Participant",
dv = "Trust",
data = data_long,
within = "Block",
between = "Condition",
detailed = TRUE)
print(results)
p_trust_block <- results[results$Effect == "Block", "p[GG]"]
results$Effect == "Block"
results$Effect
View(results)
results$anova_table
results$anova_table[results$anova_table$Block]
View(results)
results$anova_table
a <- results$anova_dable
a <- results$anova_table
View(a)
View(a)
anova_table == "Block"
anova_table <- results$anova_table
anova_table == "Block"
View(anova_table)
View(a)
anova_table['Block', 'Pr(>F)']
anova_table <- results$anova_table
p_trust_block <- anova_table['Block', 'Pr(>F)']
p_trust_condition <- anova_table['Condition', 'Pr(>F)']
p_trust_interaction <- anova_table['Condition:Block', 'Pr(>F)']
0.01 * 6
0.1 * 6
results <- aov_ez(id = "Participant",
dv = "Trust",
data = data_long,
within = "Block",
between = "Condition",
detailed = TRUE)
print(results)
capture.output(results, file = here('output','tables','12_Trust_GG_Anova.txt'))
effect_sizes <- effectsize::eta_squared(results, partial = TRUE, ci.lvl = NA)  # Set ci.lvl=NA to exclude confidence intervals for faster computation
print(effect_sizes)
capture.output(effect_sizes, file = here('output','tables','12_Trust_Effect_Sizes.txt'))
anova_table <- results$anova_table
anova_table
anova_table$`Pr(>F)` <- anova_table$`Pr(>F)`*6
anova_table
0.8*6
0.8**6
source("~/Documents/MATLAB/Blue_Orange_Reliance/BO_Reliance_Analysis/scripts/12_GG_Corrections.R", echo=TRUE)
source(here('scripts', 'Other_Functions.R'))
data <- load_processed_data()
source("~/Documents/MATLAB/Blue_Orange_Reliance/BO_Reliance_Analysis/scripts/00_Setup.R", echo=TRUE)
source(here('scripts', 'Other_Functions.R'))
data <- load_processed_data()
data_long <- load_processed_data_long()
# ANOVA with Reliance as pretictor
model <- aov(data = data_long, Trust ~ Condition * Block + Error(Participant / Block))
source(here('scripts', 'Other_Functions.R'))
data <- load_processed_data()
data_long <- load_processed_data_long()
# ANOVA
model_1 <- aov(data = data_long, Trust ~ Condition * Block + Error(Participant / Block))
summary(model_1)
tab_model(model_1)
# ANOVA with Reliance as pretictor
model_2 <- aov(data = data_long, Trust ~ Condition * Block * Reliance + Error(Participant / Block))
summary(model_2)
tab_model(model_2)
ggplot(data_long, aes(x = Reliance, y = Trust, color = Condition, group = Condition)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
ggplot(data_long, aes(x = Reliance, y = Trust, color = Condition, group = Condition)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
theme_classic()
ggplot(data_long, aes(x = Reliance, y = Trust, color = Block, group = Block)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
theme_classic()
ggplot(data_long, aes(x = Reliance, y = Trust, color = Block, group = Block)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE) +
theme_classic()
ggplot(data_long, aes(x = Reliance, y = Trust, color = Block, group = Block)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
theme_classic()
data_long$Block <- as.factor(data_long$Block)
# ANOVA
model_1 <- aov(data = data_long, Trust ~ Condition * Block + Error(Participant / Block))
summary(model_1)
tab_model(model_1)
# ANOVA with Reliance as pretictor
model_2 <- aov(data = data_long, Trust ~ Condition * Block * Reliance + Error(Participant / Block))
summary(model_2)
tab_model(model_2)
data_long$Block <- as.numeric(data_long$Block)
# ANOVA
model_1 <- aov(data = data_long, Trust ~ Condition * Block + Error(Participant / Block))
summary(model_1)
tab_model(model_1)
# ANOVA with Reliance as pretictor
model_2 <- aov(data = data_long, Trust ~ Condition * Block * Reliance + Error(Participant / Block))
summary(model_2)
tab_model(model_2)
ggplot(data_long, aes(x = Block, y = Trust, color = Condition)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
facet_wrap(~Reliance)
ggplot(data_long, aes(x = Reliance, y = Trust, color = Condition)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
facet_wrap(~Block)
ggplot(data_long, aes(x = Reliance, y = Trust)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
facet_wrap(~Block)
ggplot(data_long, aes(x = Reliance, y = Trust, colour = Block)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
facet_wrap(~Block)
ggplot(data_long, aes(x = Reliance, y = Trust, colour = as.factor(Block)))+
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
facet_wrap(~Block)
ggplot(data_long, aes(x = Reliance, y = Trust, colour = as.factor(Block))) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
ggplot(data_long, aes(x = Reliance, y = Trust, colour = as.factor(Block))) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
theme_classic()
model_3 <- aov(data = data_long, Trust ~ Condition * Block * Reliance * Confidence + Error(Participant / Block))
summary(model_3)
